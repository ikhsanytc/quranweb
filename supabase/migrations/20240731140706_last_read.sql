create table "public"."last_read" (
    "id" bigint generated by default as identity not null,
    "userId" text,
    "surat" text,
    "scrollY" text,
    "created_at" timestamp with time zone not null default now(),
    "idSurat" bigint
);


alter table "public"."last_read" enable row level security;

CREATE UNIQUE INDEX last_read_pkey ON public.last_read USING btree (id);

alter table "public"."last_read" add constraint "last_read_pkey" PRIMARY KEY using index "last_read_pkey";

grant delete on table "public"."last_read" to "anon";

grant insert on table "public"."last_read" to "anon";

grant references on table "public"."last_read" to "anon";

grant select on table "public"."last_read" to "anon";

grant trigger on table "public"."last_read" to "anon";

grant truncate on table "public"."last_read" to "anon";

grant update on table "public"."last_read" to "anon";

grant delete on table "public"."last_read" to "authenticated";

grant insert on table "public"."last_read" to "authenticated";

grant references on table "public"."last_read" to "authenticated";

grant select on table "public"."last_read" to "authenticated";

grant trigger on table "public"."last_read" to "authenticated";

grant truncate on table "public"."last_read" to "authenticated";

grant update on table "public"."last_read" to "authenticated";

grant delete on table "public"."last_read" to "service_role";

grant insert on table "public"."last_read" to "service_role";

grant references on table "public"."last_read" to "service_role";

grant select on table "public"."last_read" to "service_role";

grant trigger on table "public"."last_read" to "service_role";

grant truncate on table "public"."last_read" to "service_role";

grant update on table "public"."last_read" to "service_role";

create policy "Enable delete for authenticated users"
on "public"."last_read"
as permissive
for delete
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."last_read"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for authenticated users"
on "public"."last_read"
as permissive
for select
to authenticated
using (true);


create policy "Enable update for authenticated users"
on "public"."last_read"
as permissive
for update
to public
using (true);



